aws:
  access_key_id: <%= ENV['AWS_SNOWPLOW_ACCESS_KEY'] %>
  secret_access_key: <%= ENV['AWS_SNOWPLOW_SECRET_KEY'] %>
  s3:
    region: $AWS_region_AWS
    buckets:
      assets: s3://snowplow-hosted-assets # DO NOT CHANGE unless you are hosting the jarfiles etc yourself in your own bucket
      jsonpath_assets: # If you have defined your own JSON Schemas, add the s3:// path to your own JSON Path files in your own bucket here
      log: $AWS_log_AWS
      raw:
        in:                  # This is a YAML array of one or more in buckets - you MUST use hyphens before each entry in the array, as below
          - $AWS_S3_collector_AWS
          # e.g. s3://my-old-collector-bucket
        processing: $AWS_processing_AWS
        archive: $AWS_archive_AWS    # e.g. s3://my-archive-bucket/raw
      enriched:
        good: $AWS_enriched_good_AWS       # e.g. s3://my-out-bucket/enriched/good
        bad: $AWS_enriched_bad_AWS        # e.g. s3://my-out-bucket/enriched/bad
        errors: $AWS_enriched_errors_AWS     # Leave blank unless :continue_on_unexpected_error: set to true below
        archive: $AWS_enriched_archive_AWS    # Where to archive enriched events to, e.g. s3://my-archive-bucket/enriched
      shredded:
        good: $AWS_shredded_good_AWS       # e.g. s3://my-out-bucket/shredded/good
        bad: $AWS_shredded_bad_AWS        # e.g. s3://my-out-bucket/shredded/bad
        errors: $AWS_shredded_errors_AWS     # Leave blank unless :continue_on_unexpected_error: set to true below
        archive: $AWS_shredded_archive_AWS    # Where to archive shredded events to, e.g. s3://my-archive-bucket/shredded
  emr:
    ami_version: 5.5.0
    region: $AWS_region_AWS        # Always set this
    jobflow_role: $EMR_EC2_DefaultRole_EMR # Created using $ aws emr_EMR create-default-roles
    service_role: $EMR_DefaultRole_EMR     # Created using $ aws emr_EMR create-default-roles
    placement: $AWS_placement_AWS     # Set this if not running in VPC. Leave blank otherwise
    ec2_subnet_id: $AWS_ec2_subnet_id_AWS # Set this if running in VPC. Leave blank otherwise
    ec2_key_name: $AWS_ec2_key_name_AWS
    bootstrap: []           # Set this to specify custom boostrap actions. Leave empty otherwise
    software:
      hbase:                # Optional. To launch on cluster, provide version, "0.92.0", keep quotes. Leave empty otherwise.
      lingual:              # Optional. To launch on cluster, provide version, "1.1", keep quotes. Leave empty otherwise.
    # Adjust your Hadoop cluster below
    jobflow:
      job_name: Snowplow ETL # Give your job a name
      master_instance_type: m1.medium
      core_instance_count: 2
      core_instance_type: m1.medium
      core_instance_ebs:    # Optional. Attach an EBS volume to each core instance.
        volume_size: 100    # Gigabytes
        volume_type: "gp2"
        volume_iops: 400    # Optional. Will only be used if volume_type is "io1"
        ebs_optimized: false # Optional. Will default to true
      task_instance_count: 0 # Increase to use spot instances
      task_instance_type: m1.medium
      task_instance_bid: 0.015 # In USD. Adjust bid, or leave blank for non-spot-priced (i.e. on-demand) task instances
    bootstrap_failure_tries: 3 # Number of times to attempt the job in the event of bootstrap failures
    additional_info:        # Optional JSON string for selecting additional features
collectors:
  format: cloudfront # For example: 'clj-tomcat' for the Clojure Collector, 'thrift' for Thrift records, 'tsv/com.amazon.aws.cloudfront/wd_access_log' for Cloudfront access logs or 'ndjson/urbanairship.connect/v1' for UrbanAirship Connect events
enrich:
  versions:
    spark_enrich: 1.9.0 # Version of the Spark Enrichment process
  continue_on_unexpected_error: false # Set to 'true' (and set :out_errors: above) if you don't want any exceptions thrown from ETL
  output_compression: NONE # Compression only supported with Redshift, set to NONE if you have Postgres targets. Allowed formats: NONE, GZIP
storage:
  versions:
    rdb_shredder: 0.12.0        # Version of the Spark Shredding process
    hadoop_elasticsearch: 0.1.0 # Version of the Hadoop to Elasticsearch copying process
  download:
    folder: # Postgres-only config option. Where to store the downloaded files. Leave blank for Redshift
monitoring:
  tags: {} # Name-value pairs describing this job
  logging:
    level: $LOG_LEVEL # You can optionally switch to INFO for production
  snowplow:
    method: get
    app_id: $AWS_app_id_AWS # e.g. snowplow
    collector: $AWS_collector_AWS # e.g. d3rkrsqld9gmqf.cloudfront.net
